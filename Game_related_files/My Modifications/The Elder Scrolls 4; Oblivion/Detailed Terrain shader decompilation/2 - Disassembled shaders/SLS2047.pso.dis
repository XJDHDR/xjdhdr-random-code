    ps_2_x
    def c0, 8, 0, 1, 2
    def c1, 7, 0, 0, 0
    def c2, 3, 4, 5, 6
    dcl t0.xy
    dcl t1.xyz
    dcl t2.xyz
    dcl t3.xyz
    dcl t4.xyz
    dcl t5.xyz
    dcl t6.xyz
    dcl t7.xyz
    dcl_2d s0
    dcl_2d s1
    mov_sat_pp r0.xy, t2
    mad_pp r6.x, c17.y, r0.x, c17.x
    mad_pp r6.y, c17.w, r0.y, c17.z
    mov_sat_pp r0.xy, t1
    mad_pp r0.x, c16.y, r0.x, c16.x
    mad_pp r0.y, c16.w, r0.y, c16.z
    mov_sat_pp r1.xy, t3
    mad_pp r5.x, c18.y, r1.x, c18.x
    mad_pp r5.y, c18.w, r1.y, c18.z
    mov_sat_pp r1.xy, t4
    mad_pp r4.x, c19.y, r1.x, c19.x
    mad_pp r4.y, c19.w, r1.y, c19.z
    mov_sat_pp r1.xy, t5
    mad_pp r3.x, c20.y, r1.x, c20.x
    mad_pp r3.y, c20.w, r1.y, c20.z
    mov_sat_pp r1.xy, t6
    mad_pp r2.x, c21.y, r1.x, c21.x
    mad_pp r2.y, c21.w, r1.y, c21.z
    mov_sat_pp r1.xy, t7
    mad_pp r1.x, c22.y, r1.x, c22.x
    mad_pp r1.y, c22.w, r1.y, c22.z
    texld_pp r8, r6, s1
    texld_pp r0, r0, s1
    texld_pp r7, r5, s1
    texld_pp r6, r4, s1
    texld_pp r5, r3, s1
    texld_pp r4, r2, s1
    texld_pp r3, r1, s1
    texld_pp r1, t0, s0
    mul_pp r10.w, r8.w, t2.z
    mul_pp r0.w, r0.w, t1.z
    mov r9.w, c0.x
    min r2.w, c14.x, r9.w
    frc r9.w, r2.w
    add r11.w, r2.w, -r9.w
    cmp_pp r9.w, -r9.w, c0.y, c0.z
    cmp_pp r2.w, r2.w, c0.y, c0.z
    mad r9.w, r2.w, r9.w, r11.w
    mul_pp r0.xyz, r0, r0.w
    add r2.w, -r9.w, c0.z
    cmp_pp r0, r2.w, c0.y, r0
    mad_pp r2.w, r8.w, t2.z, r0.w
    lrp_pp r2.xyz, r10.w, r8, r0
    add r8.w, -r9.w, c0.w
    cmp_pp r0, r8.w, r0, r2
    mul_pp r8.w, r7.w, t3.z
    mad_pp r2.w, r7.w, t3.z, r0.w
    lrp_pp r2.xyz, r8.w, r7, r0
    add r7.w, -r9.w, c2.x
    cmp_pp r0, r7.w, r0, r2
    mul_pp r7.w, r6.w, t4.z
    mad_pp r2.w, r6.w, t4.z, r0.w
    lrp_pp r2.xyz, r7.w, r6, r0
    add r6.w, -r9.w, c2.y
    cmp_pp r0, r6.w, r0, r2
    mul_pp r6.w, r5.w, t5.z
    mad_pp r2.w, r5.w, t5.z, r0.w
    lrp_pp r2.xyz, r6.w, r5, r0
    add r5.w, -r9.w, c2.z
    cmp_pp r0, r5.w, r0, r2
    mul_pp r6.w, r4.w, t6.z
    mad_pp r2.w, r4.w, t6.z, r0.w
    add r5.w, -r9.w, c2.w
    lrp_pp r2.xyz, r6.w, r4, r0
    add r4.w, -r9.w, c1.x
    cmp_pp r0, r5.w, r0, r2
    mul_pp r5.w, r3.w, t7.z
    lrp_pp r2.xyz, r5.w, r3, r0
    mad_pp r2.w, r3.w, t7.z, r0.w
    cmp_pp r0, r4.w, r0, r2
    mov_sat_pp r0.w, r0.w
    mov_pp oC0, r0

// approximately 78 instruction slots used (8 texture, 70 arithmetic)
